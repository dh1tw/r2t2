// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: r2t2gui.proto

#ifndef PROTOBUF_r2t2gui_2eproto__INCLUDED
#define PROTOBUF_r2t2gui_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace R2T2GuiProto {
class R2T2GuiMessage;
class R2T2GuiMessageDefaultTypeInternal;
extern R2T2GuiMessageDefaultTypeInternal _R2T2GuiMessage_default_instance_;
class R2T2GuiMessageAnswer;
class R2T2GuiMessageAnswerDefaultTypeInternal;
extern R2T2GuiMessageAnswerDefaultTypeInternal _R2T2GuiMessageAnswer_default_instance_;
}  // namespace R2T2GuiProto

namespace R2T2GuiProto {

namespace protobuf_r2t2gui_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_r2t2gui_2eproto

enum R2T2GuiMessage_Command {
  R2T2GuiMessage_Command_NONE = 0,
  R2T2GuiMessage_Command_STARTAUDIO = 1,
  R2T2GuiMessage_Command_STOPAUDIO = 2,
  R2T2GuiMessage_Command_REQFFT = 3,
  R2T2GuiMessage_Command_GETINFO = 4
};
bool R2T2GuiMessage_Command_IsValid(int value);
const R2T2GuiMessage_Command R2T2GuiMessage_Command_Command_MIN = R2T2GuiMessage_Command_NONE;
const R2T2GuiMessage_Command R2T2GuiMessage_Command_Command_MAX = R2T2GuiMessage_Command_GETINFO;
const int R2T2GuiMessage_Command_Command_ARRAYSIZE = R2T2GuiMessage_Command_Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* R2T2GuiMessage_Command_descriptor();
inline const ::std::string& R2T2GuiMessage_Command_Name(R2T2GuiMessage_Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    R2T2GuiMessage_Command_descriptor(), value);
}
inline bool R2T2GuiMessage_Command_Parse(
    const ::std::string& name, R2T2GuiMessage_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<R2T2GuiMessage_Command>(
    R2T2GuiMessage_Command_descriptor(), name, value);
}
enum R2T2GuiMessage_Mode {
  R2T2GuiMessage_Mode_LSB = 0,
  R2T2GuiMessage_Mode_USB = 1,
  R2T2GuiMessage_Mode_DSB = 2,
  R2T2GuiMessage_Mode_CWL = 3,
  R2T2GuiMessage_Mode_CWU = 4,
  R2T2GuiMessage_Mode_FM = 5,
  R2T2GuiMessage_Mode_AM = 6,
  R2T2GuiMessage_Mode_DIGU = 7,
  R2T2GuiMessage_Mode_SPEC = 8,
  R2T2GuiMessage_Mode_DIGL = 9,
  R2T2GuiMessage_Mode_SAM = 10,
  R2T2GuiMessage_Mode_DRM = 11
};
bool R2T2GuiMessage_Mode_IsValid(int value);
const R2T2GuiMessage_Mode R2T2GuiMessage_Mode_Mode_MIN = R2T2GuiMessage_Mode_LSB;
const R2T2GuiMessage_Mode R2T2GuiMessage_Mode_Mode_MAX = R2T2GuiMessage_Mode_DRM;
const int R2T2GuiMessage_Mode_Mode_ARRAYSIZE = R2T2GuiMessage_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* R2T2GuiMessage_Mode_descriptor();
inline const ::std::string& R2T2GuiMessage_Mode_Name(R2T2GuiMessage_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    R2T2GuiMessage_Mode_descriptor(), value);
}
inline bool R2T2GuiMessage_Mode_Parse(
    const ::std::string& name, R2T2GuiMessage_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<R2T2GuiMessage_Mode>(
    R2T2GuiMessage_Mode_descriptor(), name, value);
}
enum R2T2GuiMessage_AGC {
  R2T2GuiMessage_AGC_fixed = 0,
  R2T2GuiMessage_AGC_slow = 1,
  R2T2GuiMessage_AGC_mid = 2,
  R2T2GuiMessage_AGC_fast = 3,
  R2T2GuiMessage_AGC_veryfast = 4
};
bool R2T2GuiMessage_AGC_IsValid(int value);
const R2T2GuiMessage_AGC R2T2GuiMessage_AGC_AGC_MIN = R2T2GuiMessage_AGC_fixed;
const R2T2GuiMessage_AGC R2T2GuiMessage_AGC_AGC_MAX = R2T2GuiMessage_AGC_veryfast;
const int R2T2GuiMessage_AGC_AGC_ARRAYSIZE = R2T2GuiMessage_AGC_AGC_MAX + 1;

const ::google::protobuf::EnumDescriptor* R2T2GuiMessage_AGC_descriptor();
inline const ::std::string& R2T2GuiMessage_AGC_Name(R2T2GuiMessage_AGC value) {
  return ::google::protobuf::internal::NameOfEnum(
    R2T2GuiMessage_AGC_descriptor(), value);
}
inline bool R2T2GuiMessage_AGC_Parse(
    const ::std::string& name, R2T2GuiMessage_AGC* value) {
  return ::google::protobuf::internal::ParseNamedEnum<R2T2GuiMessage_AGC>(
    R2T2GuiMessage_AGC_descriptor(), name, value);
}
enum R2T2GuiMessageAnswer_Command {
  R2T2GuiMessageAnswer_Command_NONE = 0
};
bool R2T2GuiMessageAnswer_Command_IsValid(int value);
const R2T2GuiMessageAnswer_Command R2T2GuiMessageAnswer_Command_Command_MIN = R2T2GuiMessageAnswer_Command_NONE;
const R2T2GuiMessageAnswer_Command R2T2GuiMessageAnswer_Command_Command_MAX = R2T2GuiMessageAnswer_Command_NONE;
const int R2T2GuiMessageAnswer_Command_Command_ARRAYSIZE = R2T2GuiMessageAnswer_Command_Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* R2T2GuiMessageAnswer_Command_descriptor();
inline const ::std::string& R2T2GuiMessageAnswer_Command_Name(R2T2GuiMessageAnswer_Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    R2T2GuiMessageAnswer_Command_descriptor(), value);
}
inline bool R2T2GuiMessageAnswer_Command_Parse(
    const ::std::string& name, R2T2GuiMessageAnswer_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<R2T2GuiMessageAnswer_Command>(
    R2T2GuiMessageAnswer_Command_descriptor(), name, value);
}
// ===================================================================

class R2T2GuiMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:R2T2GuiProto.R2T2GuiMessage) */ {
 public:
  R2T2GuiMessage();
  virtual ~R2T2GuiMessage();

  R2T2GuiMessage(const R2T2GuiMessage& from);

  inline R2T2GuiMessage& operator=(const R2T2GuiMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const R2T2GuiMessage& default_instance();

  static inline const R2T2GuiMessage* internal_default_instance() {
    return reinterpret_cast<const R2T2GuiMessage*>(
               &_R2T2GuiMessage_default_instance_);
  }

  void Swap(R2T2GuiMessage* other);

  // implements Message ----------------------------------------------

  inline R2T2GuiMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  R2T2GuiMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const R2T2GuiMessage& from);
  void MergeFrom(const R2T2GuiMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(R2T2GuiMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef R2T2GuiMessage_Command Command;
  static const Command NONE =
    R2T2GuiMessage_Command_NONE;
  static const Command STARTAUDIO =
    R2T2GuiMessage_Command_STARTAUDIO;
  static const Command STOPAUDIO =
    R2T2GuiMessage_Command_STOPAUDIO;
  static const Command REQFFT =
    R2T2GuiMessage_Command_REQFFT;
  static const Command GETINFO =
    R2T2GuiMessage_Command_GETINFO;
  static inline bool Command_IsValid(int value) {
    return R2T2GuiMessage_Command_IsValid(value);
  }
  static const Command Command_MIN =
    R2T2GuiMessage_Command_Command_MIN;
  static const Command Command_MAX =
    R2T2GuiMessage_Command_Command_MAX;
  static const int Command_ARRAYSIZE =
    R2T2GuiMessage_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Command_descriptor() {
    return R2T2GuiMessage_Command_descriptor();
  }
  static inline const ::std::string& Command_Name(Command value) {
    return R2T2GuiMessage_Command_Name(value);
  }
  static inline bool Command_Parse(const ::std::string& name,
      Command* value) {
    return R2T2GuiMessage_Command_Parse(name, value);
  }

  typedef R2T2GuiMessage_Mode Mode;
  static const Mode LSB =
    R2T2GuiMessage_Mode_LSB;
  static const Mode USB =
    R2T2GuiMessage_Mode_USB;
  static const Mode DSB =
    R2T2GuiMessage_Mode_DSB;
  static const Mode CWL =
    R2T2GuiMessage_Mode_CWL;
  static const Mode CWU =
    R2T2GuiMessage_Mode_CWU;
  static const Mode FM =
    R2T2GuiMessage_Mode_FM;
  static const Mode AM =
    R2T2GuiMessage_Mode_AM;
  static const Mode DIGU =
    R2T2GuiMessage_Mode_DIGU;
  static const Mode SPEC =
    R2T2GuiMessage_Mode_SPEC;
  static const Mode DIGL =
    R2T2GuiMessage_Mode_DIGL;
  static const Mode SAM =
    R2T2GuiMessage_Mode_SAM;
  static const Mode DRM =
    R2T2GuiMessage_Mode_DRM;
  static inline bool Mode_IsValid(int value) {
    return R2T2GuiMessage_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    R2T2GuiMessage_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    R2T2GuiMessage_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    R2T2GuiMessage_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return R2T2GuiMessage_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return R2T2GuiMessage_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return R2T2GuiMessage_Mode_Parse(name, value);
  }

  typedef R2T2GuiMessage_AGC AGC;
  static const AGC fixed =
    R2T2GuiMessage_AGC_fixed;
  static const AGC slow =
    R2T2GuiMessage_AGC_slow;
  static const AGC mid =
    R2T2GuiMessage_AGC_mid;
  static const AGC fast =
    R2T2GuiMessage_AGC_fast;
  static const AGC veryfast =
    R2T2GuiMessage_AGC_veryfast;
  static inline bool AGC_IsValid(int value) {
    return R2T2GuiMessage_AGC_IsValid(value);
  }
  static const AGC AGC_MIN =
    R2T2GuiMessage_AGC_AGC_MIN;
  static const AGC AGC_MAX =
    R2T2GuiMessage_AGC_AGC_MAX;
  static const int AGC_ARRAYSIZE =
    R2T2GuiMessage_AGC_AGC_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AGC_descriptor() {
    return R2T2GuiMessage_AGC_descriptor();
  }
  static inline const ::std::string& AGC_Name(AGC value) {
    return R2T2GuiMessage_AGC_Name(value);
  }
  static inline bool AGC_Parse(const ::std::string& name,
      AGC* value) {
    return R2T2GuiMessage_AGC_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bytes txData = 2;
  bool has_txdata() const;
  void clear_txdata();
  static const int kTxDataFieldNumber = 2;
  const ::std::string& txdata() const;
  void set_txdata(const ::std::string& value);
  #if LANG_CXX11
  void set_txdata(::std::string&& value);
  #endif
  void set_txdata(const char* value);
  void set_txdata(const void* value, size_t size);
  ::std::string* mutable_txdata();
  ::std::string* release_txdata();
  void set_allocated_txdata(::std::string* txdata);

  // optional string version = 13;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 13;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional uint64 rxFreq = 3;
  bool has_rxfreq() const;
  void clear_rxfreq();
  static const int kRxFreqFieldNumber = 3;
  ::google::protobuf::uint64 rxfreq() const;
  void set_rxfreq(::google::protobuf::uint64 value);

  // optional .R2T2GuiProto.R2T2GuiMessage.Command command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::R2T2GuiProto::R2T2GuiMessage_Command command() const;
  void set_command(::R2T2GuiProto::R2T2GuiMessage_Command value);

  // optional uint32 fftRate = 5;
  bool has_fftrate() const;
  void clear_fftrate();
  static const int kFftRateFieldNumber = 5;
  ::google::protobuf::uint32 fftrate() const;
  void set_fftrate(::google::protobuf::uint32 value);

  // optional uint64 txFreq = 4;
  bool has_txfreq() const;
  void clear_txfreq();
  static const int kTxFreqFieldNumber = 4;
  ::google::protobuf::uint64 txfreq() const;
  void set_txfreq(::google::protobuf::uint64 value);

  // optional uint32 fftSize = 6;
  bool has_fftsize() const;
  void clear_fftsize();
  static const int kFftSizeFieldNumber = 6;
  ::google::protobuf::uint32 fftsize() const;
  void set_fftsize(::google::protobuf::uint32 value);

  // optional .R2T2GuiProto.R2T2GuiMessage.Mode mode = 7;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 7;
  ::R2T2GuiProto::R2T2GuiMessage_Mode mode() const;
  void set_mode(::R2T2GuiProto::R2T2GuiMessage_Mode value);

  // optional int32 gain = 8;
  bool has_gain() const;
  void clear_gain();
  static const int kGainFieldNumber = 8;
  ::google::protobuf::int32 gain() const;
  void set_gain(::google::protobuf::int32 value);

  // optional uint32 antenna = 9;
  bool has_antenna() const;
  void clear_antenna();
  static const int kAntennaFieldNumber = 9;
  ::google::protobuf::uint32 antenna() const;
  void set_antenna(::google::protobuf::uint32 value);

  // optional .R2T2GuiProto.R2T2GuiMessage.AGC agc = 10;
  bool has_agc() const;
  void clear_agc();
  static const int kAgcFieldNumber = 10;
  ::R2T2GuiProto::R2T2GuiMessage_AGC agc() const;
  void set_agc(::R2T2GuiProto::R2T2GuiMessage_AGC value);

  // optional int32 filterLo = 11;
  bool has_filterlo() const;
  void clear_filterlo();
  static const int kFilterLoFieldNumber = 11;
  ::google::protobuf::int32 filterlo() const;
  void set_filterlo(::google::protobuf::int32 value);

  // optional int32 filterHi = 12;
  bool has_filterhi() const;
  void clear_filterhi();
  static const int kFilterHiFieldNumber = 12;
  ::google::protobuf::int32 filterhi() const;
  void set_filterhi(::google::protobuf::int32 value);

  // optional int32 notch = 14;
  bool has_notch() const;
  void clear_notch();
  static const int kNotchFieldNumber = 14;
  ::google::protobuf::int32 notch() const;
  void set_notch(::google::protobuf::int32 value);

  // optional int32 noise = 15;
  bool has_noise() const;
  void clear_noise();
  static const int kNoiseFieldNumber = 15;
  ::google::protobuf::int32 noise() const;
  void set_noise(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:R2T2GuiProto.R2T2GuiMessage)
 private:
  void set_has_command();
  void clear_has_command();
  void set_has_txdata();
  void clear_has_txdata();
  void set_has_rxfreq();
  void clear_has_rxfreq();
  void set_has_txfreq();
  void clear_has_txfreq();
  void set_has_fftrate();
  void clear_has_fftrate();
  void set_has_fftsize();
  void clear_has_fftsize();
  void set_has_mode();
  void clear_has_mode();
  void set_has_gain();
  void clear_has_gain();
  void set_has_antenna();
  void clear_has_antenna();
  void set_has_agc();
  void clear_has_agc();
  void set_has_filterlo();
  void clear_has_filterlo();
  void set_has_filterhi();
  void clear_has_filterhi();
  void set_has_version();
  void clear_has_version();
  void set_has_notch();
  void clear_has_notch();
  void set_has_noise();
  void clear_has_noise();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr txdata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 rxfreq_;
  int command_;
  ::google::protobuf::uint32 fftrate_;
  ::google::protobuf::uint64 txfreq_;
  ::google::protobuf::uint32 fftsize_;
  int mode_;
  ::google::protobuf::int32 gain_;
  ::google::protobuf::uint32 antenna_;
  int agc_;
  ::google::protobuf::int32 filterlo_;
  ::google::protobuf::int32 filterhi_;
  ::google::protobuf::int32 notch_;
  ::google::protobuf::int32 noise_;
  friend struct  protobuf_r2t2gui_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class R2T2GuiMessageAnswer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:R2T2GuiProto.R2T2GuiMessageAnswer) */ {
 public:
  R2T2GuiMessageAnswer();
  virtual ~R2T2GuiMessageAnswer();

  R2T2GuiMessageAnswer(const R2T2GuiMessageAnswer& from);

  inline R2T2GuiMessageAnswer& operator=(const R2T2GuiMessageAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const R2T2GuiMessageAnswer& default_instance();

  static inline const R2T2GuiMessageAnswer* internal_default_instance() {
    return reinterpret_cast<const R2T2GuiMessageAnswer*>(
               &_R2T2GuiMessageAnswer_default_instance_);
  }

  void Swap(R2T2GuiMessageAnswer* other);

  // implements Message ----------------------------------------------

  inline R2T2GuiMessageAnswer* New() const PROTOBUF_FINAL { return New(NULL); }

  R2T2GuiMessageAnswer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const R2T2GuiMessageAnswer& from);
  void MergeFrom(const R2T2GuiMessageAnswer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(R2T2GuiMessageAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef R2T2GuiMessageAnswer_Command Command;
  static const Command NONE =
    R2T2GuiMessageAnswer_Command_NONE;
  static inline bool Command_IsValid(int value) {
    return R2T2GuiMessageAnswer_Command_IsValid(value);
  }
  static const Command Command_MIN =
    R2T2GuiMessageAnswer_Command_Command_MIN;
  static const Command Command_MAX =
    R2T2GuiMessageAnswer_Command_Command_MAX;
  static const int Command_ARRAYSIZE =
    R2T2GuiMessageAnswer_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Command_descriptor() {
    return R2T2GuiMessageAnswer_Command_descriptor();
  }
  static inline const ::std::string& Command_Name(Command value) {
    return R2T2GuiMessageAnswer_Command_Name(value);
  }
  static inline bool Command_Parse(const ::std::string& name,
      Command* value) {
    return R2T2GuiMessageAnswer_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bytes rxData = 2;
  bool has_rxdata() const;
  void clear_rxdata();
  static const int kRxDataFieldNumber = 2;
  const ::std::string& rxdata() const;
  void set_rxdata(const ::std::string& value);
  #if LANG_CXX11
  void set_rxdata(::std::string&& value);
  #endif
  void set_rxdata(const char* value);
  void set_rxdata(const void* value, size_t size);
  ::std::string* mutable_rxdata();
  ::std::string* release_rxdata();
  void set_allocated_rxdata(::std::string* rxdata);

  // optional bytes fftData = 3;
  bool has_fftdata() const;
  void clear_fftdata();
  static const int kFftDataFieldNumber = 3;
  const ::std::string& fftdata() const;
  void set_fftdata(const ::std::string& value);
  #if LANG_CXX11
  void set_fftdata(::std::string&& value);
  #endif
  void set_fftdata(const char* value);
  void set_fftdata(const void* value, size_t size);
  ::std::string* mutable_fftdata();
  ::std::string* release_fftdata();
  void set_allocated_fftdata(::std::string* fftdata);

  // optional string version = 6;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional .R2T2GuiProto.R2T2GuiMessageAnswer.Command command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::R2T2GuiProto::R2T2GuiMessageAnswer_Command command() const;
  void set_command(::R2T2GuiProto::R2T2GuiMessageAnswer_Command value);

  // optional uint32 txDataAck = 4;
  bool has_txdataack() const;
  void clear_txdataack();
  static const int kTxDataAckFieldNumber = 4;
  ::google::protobuf::uint32 txdataack() const;
  void set_txdataack(::google::protobuf::uint32 value);

  // optional double rssi = 5;
  bool has_rssi() const;
  void clear_rssi();
  static const int kRssiFieldNumber = 5;
  double rssi() const;
  void set_rssi(double value);

  // optional uint32 fftRate = 7;
  bool has_fftrate() const;
  void clear_fftrate();
  static const int kFftRateFieldNumber = 7;
  ::google::protobuf::uint32 fftrate() const;
  void set_fftrate(::google::protobuf::uint32 value);

  // optional int32 gain = 8;
  bool has_gain() const;
  void clear_gain();
  static const int kGainFieldNumber = 8;
  ::google::protobuf::int32 gain() const;
  void set_gain(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:R2T2GuiProto.R2T2GuiMessageAnswer)
 private:
  void set_has_command();
  void clear_has_command();
  void set_has_rxdata();
  void clear_has_rxdata();
  void set_has_fftdata();
  void clear_has_fftdata();
  void set_has_txdataack();
  void clear_has_txdataack();
  void set_has_rssi();
  void clear_has_rssi();
  void set_has_version();
  void clear_has_version();
  void set_has_fftrate();
  void clear_has_fftrate();
  void set_has_gain();
  void clear_has_gain();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr rxdata_;
  ::google::protobuf::internal::ArenaStringPtr fftdata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  int command_;
  ::google::protobuf::uint32 txdataack_;
  double rssi_;
  ::google::protobuf::uint32 fftrate_;
  ::google::protobuf::int32 gain_;
  friend struct  protobuf_r2t2gui_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// R2T2GuiMessage

// optional .R2T2GuiProto.R2T2GuiMessage.Command command = 1;
inline bool R2T2GuiMessage::has_command() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void R2T2GuiMessage::set_has_command() {
  _has_bits_[0] |= 0x00000008u;
}
inline void R2T2GuiMessage::clear_has_command() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void R2T2GuiMessage::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::R2T2GuiProto::R2T2GuiMessage_Command R2T2GuiMessage::command() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.command)
  return static_cast< ::R2T2GuiProto::R2T2GuiMessage_Command >(command_);
}
inline void R2T2GuiMessage::set_command(::R2T2GuiProto::R2T2GuiMessage_Command value) {
  assert(::R2T2GuiProto::R2T2GuiMessage_Command_IsValid(value));
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.command)
}

// optional bytes txData = 2;
inline bool R2T2GuiMessage::has_txdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void R2T2GuiMessage::set_has_txdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void R2T2GuiMessage::clear_has_txdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void R2T2GuiMessage::clear_txdata() {
  txdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_txdata();
}
inline const ::std::string& R2T2GuiMessage::txdata() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.txData)
  return txdata_.GetNoArena();
}
inline void R2T2GuiMessage::set_txdata(const ::std::string& value) {
  set_has_txdata();
  txdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.txData)
}
#if LANG_CXX11
inline void R2T2GuiMessage::set_txdata(::std::string&& value) {
  set_has_txdata();
  txdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:R2T2GuiProto.R2T2GuiMessage.txData)
}
#endif
inline void R2T2GuiMessage::set_txdata(const char* value) {
  set_has_txdata();
  txdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:R2T2GuiProto.R2T2GuiMessage.txData)
}
inline void R2T2GuiMessage::set_txdata(const void* value, size_t size) {
  set_has_txdata();
  txdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:R2T2GuiProto.R2T2GuiMessage.txData)
}
inline ::std::string* R2T2GuiMessage::mutable_txdata() {
  set_has_txdata();
  // @@protoc_insertion_point(field_mutable:R2T2GuiProto.R2T2GuiMessage.txData)
  return txdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* R2T2GuiMessage::release_txdata() {
  // @@protoc_insertion_point(field_release:R2T2GuiProto.R2T2GuiMessage.txData)
  clear_has_txdata();
  return txdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void R2T2GuiMessage::set_allocated_txdata(::std::string* txdata) {
  if (txdata != NULL) {
    set_has_txdata();
  } else {
    clear_has_txdata();
  }
  txdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txdata);
  // @@protoc_insertion_point(field_set_allocated:R2T2GuiProto.R2T2GuiMessage.txData)
}

// optional uint64 rxFreq = 3;
inline bool R2T2GuiMessage::has_rxfreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void R2T2GuiMessage::set_has_rxfreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void R2T2GuiMessage::clear_has_rxfreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void R2T2GuiMessage::clear_rxfreq() {
  rxfreq_ = GOOGLE_ULONGLONG(0);
  clear_has_rxfreq();
}
inline ::google::protobuf::uint64 R2T2GuiMessage::rxfreq() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.rxFreq)
  return rxfreq_;
}
inline void R2T2GuiMessage::set_rxfreq(::google::protobuf::uint64 value) {
  set_has_rxfreq();
  rxfreq_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.rxFreq)
}

// optional uint64 txFreq = 4;
inline bool R2T2GuiMessage::has_txfreq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void R2T2GuiMessage::set_has_txfreq() {
  _has_bits_[0] |= 0x00000020u;
}
inline void R2T2GuiMessage::clear_has_txfreq() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void R2T2GuiMessage::clear_txfreq() {
  txfreq_ = GOOGLE_ULONGLONG(0);
  clear_has_txfreq();
}
inline ::google::protobuf::uint64 R2T2GuiMessage::txfreq() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.txFreq)
  return txfreq_;
}
inline void R2T2GuiMessage::set_txfreq(::google::protobuf::uint64 value) {
  set_has_txfreq();
  txfreq_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.txFreq)
}

// optional uint32 fftRate = 5;
inline bool R2T2GuiMessage::has_fftrate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void R2T2GuiMessage::set_has_fftrate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void R2T2GuiMessage::clear_has_fftrate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void R2T2GuiMessage::clear_fftrate() {
  fftrate_ = 0u;
  clear_has_fftrate();
}
inline ::google::protobuf::uint32 R2T2GuiMessage::fftrate() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.fftRate)
  return fftrate_;
}
inline void R2T2GuiMessage::set_fftrate(::google::protobuf::uint32 value) {
  set_has_fftrate();
  fftrate_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.fftRate)
}

// optional uint32 fftSize = 6;
inline bool R2T2GuiMessage::has_fftsize() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void R2T2GuiMessage::set_has_fftsize() {
  _has_bits_[0] |= 0x00000040u;
}
inline void R2T2GuiMessage::clear_has_fftsize() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void R2T2GuiMessage::clear_fftsize() {
  fftsize_ = 0u;
  clear_has_fftsize();
}
inline ::google::protobuf::uint32 R2T2GuiMessage::fftsize() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.fftSize)
  return fftsize_;
}
inline void R2T2GuiMessage::set_fftsize(::google::protobuf::uint32 value) {
  set_has_fftsize();
  fftsize_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.fftSize)
}

// optional .R2T2GuiProto.R2T2GuiMessage.Mode mode = 7;
inline bool R2T2GuiMessage::has_mode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void R2T2GuiMessage::set_has_mode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void R2T2GuiMessage::clear_has_mode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void R2T2GuiMessage::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::R2T2GuiProto::R2T2GuiMessage_Mode R2T2GuiMessage::mode() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.mode)
  return static_cast< ::R2T2GuiProto::R2T2GuiMessage_Mode >(mode_);
}
inline void R2T2GuiMessage::set_mode(::R2T2GuiProto::R2T2GuiMessage_Mode value) {
  assert(::R2T2GuiProto::R2T2GuiMessage_Mode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.mode)
}

// optional int32 gain = 8;
inline bool R2T2GuiMessage::has_gain() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void R2T2GuiMessage::set_has_gain() {
  _has_bits_[0] |= 0x00000100u;
}
inline void R2T2GuiMessage::clear_has_gain() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void R2T2GuiMessage::clear_gain() {
  gain_ = 0;
  clear_has_gain();
}
inline ::google::protobuf::int32 R2T2GuiMessage::gain() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.gain)
  return gain_;
}
inline void R2T2GuiMessage::set_gain(::google::protobuf::int32 value) {
  set_has_gain();
  gain_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.gain)
}

// optional uint32 antenna = 9;
inline bool R2T2GuiMessage::has_antenna() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void R2T2GuiMessage::set_has_antenna() {
  _has_bits_[0] |= 0x00000200u;
}
inline void R2T2GuiMessage::clear_has_antenna() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void R2T2GuiMessage::clear_antenna() {
  antenna_ = 0u;
  clear_has_antenna();
}
inline ::google::protobuf::uint32 R2T2GuiMessage::antenna() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.antenna)
  return antenna_;
}
inline void R2T2GuiMessage::set_antenna(::google::protobuf::uint32 value) {
  set_has_antenna();
  antenna_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.antenna)
}

// optional .R2T2GuiProto.R2T2GuiMessage.AGC agc = 10;
inline bool R2T2GuiMessage::has_agc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void R2T2GuiMessage::set_has_agc() {
  _has_bits_[0] |= 0x00000400u;
}
inline void R2T2GuiMessage::clear_has_agc() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void R2T2GuiMessage::clear_agc() {
  agc_ = 0;
  clear_has_agc();
}
inline ::R2T2GuiProto::R2T2GuiMessage_AGC R2T2GuiMessage::agc() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.agc)
  return static_cast< ::R2T2GuiProto::R2T2GuiMessage_AGC >(agc_);
}
inline void R2T2GuiMessage::set_agc(::R2T2GuiProto::R2T2GuiMessage_AGC value) {
  assert(::R2T2GuiProto::R2T2GuiMessage_AGC_IsValid(value));
  set_has_agc();
  agc_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.agc)
}

// optional int32 filterLo = 11;
inline bool R2T2GuiMessage::has_filterlo() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void R2T2GuiMessage::set_has_filterlo() {
  _has_bits_[0] |= 0x00000800u;
}
inline void R2T2GuiMessage::clear_has_filterlo() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void R2T2GuiMessage::clear_filterlo() {
  filterlo_ = 0;
  clear_has_filterlo();
}
inline ::google::protobuf::int32 R2T2GuiMessage::filterlo() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.filterLo)
  return filterlo_;
}
inline void R2T2GuiMessage::set_filterlo(::google::protobuf::int32 value) {
  set_has_filterlo();
  filterlo_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.filterLo)
}

// optional int32 filterHi = 12;
inline bool R2T2GuiMessage::has_filterhi() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void R2T2GuiMessage::set_has_filterhi() {
  _has_bits_[0] |= 0x00001000u;
}
inline void R2T2GuiMessage::clear_has_filterhi() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void R2T2GuiMessage::clear_filterhi() {
  filterhi_ = 0;
  clear_has_filterhi();
}
inline ::google::protobuf::int32 R2T2GuiMessage::filterhi() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.filterHi)
  return filterhi_;
}
inline void R2T2GuiMessage::set_filterhi(::google::protobuf::int32 value) {
  set_has_filterhi();
  filterhi_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.filterHi)
}

// optional string version = 13;
inline bool R2T2GuiMessage::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void R2T2GuiMessage::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void R2T2GuiMessage::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void R2T2GuiMessage::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& R2T2GuiMessage::version() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.version)
  return version_.GetNoArena();
}
inline void R2T2GuiMessage::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.version)
}
#if LANG_CXX11
inline void R2T2GuiMessage::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:R2T2GuiProto.R2T2GuiMessage.version)
}
#endif
inline void R2T2GuiMessage::set_version(const char* value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:R2T2GuiProto.R2T2GuiMessage.version)
}
inline void R2T2GuiMessage::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:R2T2GuiProto.R2T2GuiMessage.version)
}
inline ::std::string* R2T2GuiMessage::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:R2T2GuiProto.R2T2GuiMessage.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* R2T2GuiMessage::release_version() {
  // @@protoc_insertion_point(field_release:R2T2GuiProto.R2T2GuiMessage.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void R2T2GuiMessage::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:R2T2GuiProto.R2T2GuiMessage.version)
}

// optional int32 notch = 14;
inline bool R2T2GuiMessage::has_notch() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void R2T2GuiMessage::set_has_notch() {
  _has_bits_[0] |= 0x00002000u;
}
inline void R2T2GuiMessage::clear_has_notch() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void R2T2GuiMessage::clear_notch() {
  notch_ = 0;
  clear_has_notch();
}
inline ::google::protobuf::int32 R2T2GuiMessage::notch() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.notch)
  return notch_;
}
inline void R2T2GuiMessage::set_notch(::google::protobuf::int32 value) {
  set_has_notch();
  notch_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.notch)
}

// optional int32 noise = 15;
inline bool R2T2GuiMessage::has_noise() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void R2T2GuiMessage::set_has_noise() {
  _has_bits_[0] |= 0x00004000u;
}
inline void R2T2GuiMessage::clear_has_noise() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void R2T2GuiMessage::clear_noise() {
  noise_ = 0;
  clear_has_noise();
}
inline ::google::protobuf::int32 R2T2GuiMessage::noise() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessage.noise)
  return noise_;
}
inline void R2T2GuiMessage::set_noise(::google::protobuf::int32 value) {
  set_has_noise();
  noise_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessage.noise)
}

// -------------------------------------------------------------------

// R2T2GuiMessageAnswer

// optional .R2T2GuiProto.R2T2GuiMessageAnswer.Command command = 1;
inline bool R2T2GuiMessageAnswer::has_command() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_command() {
  _has_bits_[0] |= 0x00000008u;
}
inline void R2T2GuiMessageAnswer::clear_has_command() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void R2T2GuiMessageAnswer::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::R2T2GuiProto::R2T2GuiMessageAnswer_Command R2T2GuiMessageAnswer::command() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.command)
  return static_cast< ::R2T2GuiProto::R2T2GuiMessageAnswer_Command >(command_);
}
inline void R2T2GuiMessageAnswer::set_command(::R2T2GuiProto::R2T2GuiMessageAnswer_Command value) {
  assert(::R2T2GuiProto::R2T2GuiMessageAnswer_Command_IsValid(value));
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.command)
}

// optional bytes rxData = 2;
inline bool R2T2GuiMessageAnswer::has_rxdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_rxdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void R2T2GuiMessageAnswer::clear_has_rxdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void R2T2GuiMessageAnswer::clear_rxdata() {
  rxdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rxdata();
}
inline const ::std::string& R2T2GuiMessageAnswer::rxdata() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
  return rxdata_.GetNoArena();
}
inline void R2T2GuiMessageAnswer::set_rxdata(const ::std::string& value) {
  set_has_rxdata();
  rxdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
}
#if LANG_CXX11
inline void R2T2GuiMessageAnswer::set_rxdata(::std::string&& value) {
  set_has_rxdata();
  rxdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
}
#endif
inline void R2T2GuiMessageAnswer::set_rxdata(const char* value) {
  set_has_rxdata();
  rxdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
}
inline void R2T2GuiMessageAnswer::set_rxdata(const void* value, size_t size) {
  set_has_rxdata();
  rxdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
}
inline ::std::string* R2T2GuiMessageAnswer::mutable_rxdata() {
  set_has_rxdata();
  // @@protoc_insertion_point(field_mutable:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
  return rxdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* R2T2GuiMessageAnswer::release_rxdata() {
  // @@protoc_insertion_point(field_release:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
  clear_has_rxdata();
  return rxdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void R2T2GuiMessageAnswer::set_allocated_rxdata(::std::string* rxdata) {
  if (rxdata != NULL) {
    set_has_rxdata();
  } else {
    clear_has_rxdata();
  }
  rxdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rxdata);
  // @@protoc_insertion_point(field_set_allocated:R2T2GuiProto.R2T2GuiMessageAnswer.rxData)
}

// optional bytes fftData = 3;
inline bool R2T2GuiMessageAnswer::has_fftdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_fftdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void R2T2GuiMessageAnswer::clear_has_fftdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void R2T2GuiMessageAnswer::clear_fftdata() {
  fftdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fftdata();
}
inline const ::std::string& R2T2GuiMessageAnswer::fftdata() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
  return fftdata_.GetNoArena();
}
inline void R2T2GuiMessageAnswer::set_fftdata(const ::std::string& value) {
  set_has_fftdata();
  fftdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
}
#if LANG_CXX11
inline void R2T2GuiMessageAnswer::set_fftdata(::std::string&& value) {
  set_has_fftdata();
  fftdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
}
#endif
inline void R2T2GuiMessageAnswer::set_fftdata(const char* value) {
  set_has_fftdata();
  fftdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
}
inline void R2T2GuiMessageAnswer::set_fftdata(const void* value, size_t size) {
  set_has_fftdata();
  fftdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
}
inline ::std::string* R2T2GuiMessageAnswer::mutable_fftdata() {
  set_has_fftdata();
  // @@protoc_insertion_point(field_mutable:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
  return fftdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* R2T2GuiMessageAnswer::release_fftdata() {
  // @@protoc_insertion_point(field_release:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
  clear_has_fftdata();
  return fftdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void R2T2GuiMessageAnswer::set_allocated_fftdata(::std::string* fftdata) {
  if (fftdata != NULL) {
    set_has_fftdata();
  } else {
    clear_has_fftdata();
  }
  fftdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fftdata);
  // @@protoc_insertion_point(field_set_allocated:R2T2GuiProto.R2T2GuiMessageAnswer.fftData)
}

// optional uint32 txDataAck = 4;
inline bool R2T2GuiMessageAnswer::has_txdataack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_txdataack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void R2T2GuiMessageAnswer::clear_has_txdataack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void R2T2GuiMessageAnswer::clear_txdataack() {
  txdataack_ = 0u;
  clear_has_txdataack();
}
inline ::google::protobuf::uint32 R2T2GuiMessageAnswer::txdataack() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.txDataAck)
  return txdataack_;
}
inline void R2T2GuiMessageAnswer::set_txdataack(::google::protobuf::uint32 value) {
  set_has_txdataack();
  txdataack_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.txDataAck)
}

// optional double rssi = 5;
inline bool R2T2GuiMessageAnswer::has_rssi() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_rssi() {
  _has_bits_[0] |= 0x00000020u;
}
inline void R2T2GuiMessageAnswer::clear_has_rssi() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void R2T2GuiMessageAnswer::clear_rssi() {
  rssi_ = 0;
  clear_has_rssi();
}
inline double R2T2GuiMessageAnswer::rssi() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.rssi)
  return rssi_;
}
inline void R2T2GuiMessageAnswer::set_rssi(double value) {
  set_has_rssi();
  rssi_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.rssi)
}

// optional string version = 6;
inline bool R2T2GuiMessageAnswer::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void R2T2GuiMessageAnswer::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void R2T2GuiMessageAnswer::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& R2T2GuiMessageAnswer::version() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.version)
  return version_.GetNoArena();
}
inline void R2T2GuiMessageAnswer::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.version)
}
#if LANG_CXX11
inline void R2T2GuiMessageAnswer::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:R2T2GuiProto.R2T2GuiMessageAnswer.version)
}
#endif
inline void R2T2GuiMessageAnswer::set_version(const char* value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:R2T2GuiProto.R2T2GuiMessageAnswer.version)
}
inline void R2T2GuiMessageAnswer::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:R2T2GuiProto.R2T2GuiMessageAnswer.version)
}
inline ::std::string* R2T2GuiMessageAnswer::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:R2T2GuiProto.R2T2GuiMessageAnswer.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* R2T2GuiMessageAnswer::release_version() {
  // @@protoc_insertion_point(field_release:R2T2GuiProto.R2T2GuiMessageAnswer.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void R2T2GuiMessageAnswer::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:R2T2GuiProto.R2T2GuiMessageAnswer.version)
}

// optional uint32 fftRate = 7;
inline bool R2T2GuiMessageAnswer::has_fftrate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_fftrate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void R2T2GuiMessageAnswer::clear_has_fftrate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void R2T2GuiMessageAnswer::clear_fftrate() {
  fftrate_ = 0u;
  clear_has_fftrate();
}
inline ::google::protobuf::uint32 R2T2GuiMessageAnswer::fftrate() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.fftRate)
  return fftrate_;
}
inline void R2T2GuiMessageAnswer::set_fftrate(::google::protobuf::uint32 value) {
  set_has_fftrate();
  fftrate_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.fftRate)
}

// optional int32 gain = 8;
inline bool R2T2GuiMessageAnswer::has_gain() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void R2T2GuiMessageAnswer::set_has_gain() {
  _has_bits_[0] |= 0x00000080u;
}
inline void R2T2GuiMessageAnswer::clear_has_gain() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void R2T2GuiMessageAnswer::clear_gain() {
  gain_ = 0;
  clear_has_gain();
}
inline ::google::protobuf::int32 R2T2GuiMessageAnswer::gain() const {
  // @@protoc_insertion_point(field_get:R2T2GuiProto.R2T2GuiMessageAnswer.gain)
  return gain_;
}
inline void R2T2GuiMessageAnswer::set_gain(::google::protobuf::int32 value) {
  set_has_gain();
  gain_ = value;
  // @@protoc_insertion_point(field_set:R2T2GuiProto.R2T2GuiMessageAnswer.gain)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace R2T2GuiProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::R2T2GuiProto::R2T2GuiMessage_Command> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::R2T2GuiProto::R2T2GuiMessage_Command>() {
  return ::R2T2GuiProto::R2T2GuiMessage_Command_descriptor();
}
template <> struct is_proto_enum< ::R2T2GuiProto::R2T2GuiMessage_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::R2T2GuiProto::R2T2GuiMessage_Mode>() {
  return ::R2T2GuiProto::R2T2GuiMessage_Mode_descriptor();
}
template <> struct is_proto_enum< ::R2T2GuiProto::R2T2GuiMessage_AGC> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::R2T2GuiProto::R2T2GuiMessage_AGC>() {
  return ::R2T2GuiProto::R2T2GuiMessage_AGC_descriptor();
}
template <> struct is_proto_enum< ::R2T2GuiProto::R2T2GuiMessageAnswer_Command> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::R2T2GuiProto::R2T2GuiMessageAnswer_Command>() {
  return ::R2T2GuiProto::R2T2GuiMessageAnswer_Command_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_r2t2gui_2eproto__INCLUDED
